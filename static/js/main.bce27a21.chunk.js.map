{"version":3,"sources":["controls.js","tile.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","DiscreteSlider","props","classes","className","Typography","class","id","gutterBottom","Slider","defaultValue","onChange","event","newVal","density","aria-labelledby","step","min","max","marks","value","label","movement","Tile","movementHandler","arg","setState","densityHandler","state","bind","AppWrapper","TitleWrapper","DescWrapper","style","backgroundColor","borderRadius","params","particles","number","this","enable","value_area","line_linked","opacity","distance","move","direction","speed","bounce","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","ControlWrapper","Component","styled","h1","div","App","BackgroundWrapper","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bce27a21.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport './App.css';\n\nconst useStyles = makeStyles({\n\troot: {\n        width: '35vw',\n\t}\n});\nexport default function DiscreteSlider(props) {\n\tconst classes = useStyles();\n\n\tconst handleMovement = (event, newVal) => {\n\t\tprops.movement(newVal);\n\t};\n\tconst handleDensity = (event, newVal) => {\n\t\tprops.density(newVal);\n\t};\n\n\tconst pmarks = [\n        { value: 5, label: 'Zzyzx' },\n        { value: 21, label: 'Riverside' },\n\t\t{ value: 40, label: 'Portland' },\n\t\t{ value: 66, label: 'San Francisco' },\n\t\t{ value: 100, label: 'New York City' }\n\t];\n\n\tconst mmarks = [\n\t\t{ value: .3, label: 'Shelter in Place' },\n\t\t{ value: 5, label: 'Essential Travel' },\n\t\t{ value: 8, label: 'No Lockdown' }\n\t];\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Typography class=\"label\" id=\"discrete-slider\" gutterBottom>\n\t\t\t\tPopulation Density\n\t\t\t</Typography>\n\t\t\t<Slider\n\t\t\t\tdefaultValue={30}\n\t\t\t\tonChange={handleDensity}\n\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\tstep={5}\n\t\t\t\tmin={0}\n\t\t\t\tmax={100}\n\t\t\t\tmarks={pmarks}\n\t\t\t/>\n\t\t\t<Typography class=\"label\" id=\"discrete-slider\" gutterBottom>\n\t\t\t\tMovement\n\t\t\t</Typography>\n\t\t\t<Slider\n\t\t\t\tdefaultValue={3}\n\t\t\t\tonChange={handleMovement}\n\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\tstep={.1}\n\t\t\t\tmarks={mmarks}\n\t\t\t\tmin={0}\n\t\t\t\tmax={10}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Controls from './controls.js';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nclass Tile extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { density: 10, movement: 1 };\n\t\tthis.movementHandler = this.movementHandler.bind(this);\n\t}\n\n\tmovementHandler = arg => {\n\t\tthis.setState({ movement: arg });\n\t};\n\n\tdensityHandler = arg => {\n\t\tthis.setState({ density: arg });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<AppWrapper>\n\t\t\t\t<TitleWrapper>coviz-19<DescWrapper></DescWrapper></TitleWrapper>\n                \n\n\t\t\t\t<Particles\n                    className=\"particles\"\n\t\t\t\t\tstyle={{ backgroundColor: '#44475a', borderRadius: '15px' }}\n\t\t\t\t\tparams={{\n\t\t\t\t\t\tparticles: {\n\t\t\t\t\t\t\tnumber: {\n\t\t\t\t\t\t\t\tvalue: this.state.density,\n\t\t\t\t\t\t\t\tdensity: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\tvalue_area: 1500\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tline_linked: {\n\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\topacity: 0.5,\n\t\t\t\t\t\t\t\tdistance: 60\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmove: {\n\t\t\t\t\t\t\t\tdirection: 'none',\n\t\t\t\t\t\t\t\tspeed: this.state.movement,\n\t\t\t\t\t\t\t\tbounce: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsize: {\n\t\t\t\t\t\t\t\tvalue: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\topacity: {\n\t\t\t\t\t\t\t\tanim: {\n\t\t\t\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\t\t\t\tspeed: 1,\n\t\t\t\t\t\t\t\t\topacity_min: 0.05\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinteractivity: {\n\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\tonclick: {\n\t\t\t\t\t\t\t\t\tenable: false,\n\t\t\t\t\t\t\t\t\tmode: 'push'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodes: {\n\t\t\t\t\t\t\t\tpush: {\n\t\t\t\t\t\t\t\t\tparticles_nb: 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tretina_detect: true\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ControlWrapper>\n\t\t\t\t\t<Controls\n\t\t\t\t\t\tmovement={this.movementHandler}\n\t\t\t\t\t\tdensity={this.densityHandler}\n\t\t\t\t\t/>\n\t\t\t\t</ControlWrapper>\n\t\t\t</AppWrapper>\n\t\t);\n\t}\n}\n\nexport default Tile;\n\nconst TitleWrapper = styled.h1`\n\tfont-size: 4rem;\n\t@media (max-width: 800px) {\n\t\tfont-size: 1.7rem;\n\t}\n`;\n\nconst DescWrapper = styled.h1`\n\tfont-size: 4rem;\n\t@media (max-width: 800px) {\n\t\tfont-size: 2rem;\n\t}\n`;\n\nconst AppWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 0.8fr 1fr;\n\twidth: 70vw;\n\theight: 600px;\n\tmargin-top: 50px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tbackground-color: #f8f8f2;\n\tpadding: 100px;\n    border-radius: 15px;\n    \n    @media(max-width: 800px) {\n        width: 100vw;\n        height: 90vh;\n        padding: 20px;\n    }\n`;\n\nconst ControlWrapper = styled.div`\n\tmax-width: max-content;\n\tmargin-top: -200px;\n\tmargin-right: -150px;\n\theight: min-content;\n\ttext-align: right;\n\tpadding: 15px 55px 15px 55px;\n\tbackground-color: #bcbcbc;\n\topacity: 0.7;\n    border-radius: 15px;\n    @media(max-width: 800px) {\n        margin-top: -300px;\n        margin-right: -200px;\n    }\n`;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Tile from './tile.js';\nimport styled from 'styled-components'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n                <BackgroundWrapper>\n\t\t\t\t<Tile />\n                </BackgroundWrapper>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\nconst BackgroundWrapper = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nmin-height: 100vh;\nmin-width: 100vw;\nbackground-color: #282a36;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}